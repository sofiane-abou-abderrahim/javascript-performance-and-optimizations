{"version":3,"sources":["webpack:///./src/optimized/product-management.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/forced-string-trim-method.js"],"names":["priceEl","document","getElementById","titleEl","deleteProduct","prodId","deletedProductIndex","products","findIndex","prod","id","deletedProduct","splice","updateProducts","addProduct","event","title","value","price","trim","length","alert","newProduct","Date","toString","unshift","module","exports","$","$trim","target","proto","forced","forcedStringTrimMethod","this","requireObjectCoercible","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","start","end","fails","whitespaces","METHOD_NAME","name"],"mappings":"yNAGA,MAAMA,EAAUC,SAASC,eAAe,SAClCC,EAAUF,SAASC,eAAe,SAEjC,SAASE,EAAcC,GAC5B,MAAMC,EAAsBC,IAASC,UAAUC,GAAQA,EAAKC,KAAOL,GAC7DM,EAAiBJ,IAASD,GAChCC,IAASK,OAAON,EAAqB,GACrCO,YAAeF,EAAgBN,EAAQD,GAAe,GAGjD,SAASU,EAAWC,GACzB,MAAMC,EAAQb,EAAQc,MAChBC,EAAQlB,EAAQiB,MAEtB,GAA4B,IAAxBD,EAAMG,OAAOC,QAAwC,IAAxBF,EAAMC,OAAOC,SAAiBF,EAAQ,EAErE,YADAG,MAAM,6DAIR,MAAMC,EAAa,CACjBZ,IAAI,IAAIa,MAAOC,WACfR,MAAOA,EACPE,MAAOA,GAGTX,IAASkB,QAAQH,GACjBT,YAAeS,EAAYA,EAAWZ,GAAIN,GAAe,K,iBC3B3DsB,EAAOC,QAAU,iD,gCCDjB,IAAIC,EAAI,EAAQ,IACZC,EAAQ,EAAQ,IAA4BV,KAKhDS,EAAE,CAAEE,OAAQ,SAAUC,OAAO,EAAMC,OAJN,EAAQ,GAIMC,CAAuB,SAAW,CAC3Ed,KAAM,WACJ,OAAOU,EAAMK,U,mBCTjB,IAAIC,EAAyB,EAAQ,IAGjCC,EAAa,IAFC,EAAQ,IAEW,IACjCC,EAAQC,OAAO,IAAMF,EAAaA,EAAa,KAC/CG,EAAQD,OAAOF,EAAaA,EAAa,MAGzCI,EAAe,SAAUC,GAC3B,OAAO,SAAUC,GACf,IAAIC,EAASC,OAAOT,EAAuBO,IAG3C,OAFW,EAAPD,IAAUE,EAASA,EAAOE,QAAQR,EAAO,KAClC,EAAPI,IAAUE,EAASA,EAAOE,QAAQN,EAAO,KACtCI,IAIXjB,EAAOC,QAAU,CAGfmB,MAAON,EAAa,GAGpBO,IAAKP,EAAa,GAGlBrB,KAAMqB,EAAa,K,mBC1BrB,IAAIQ,EAAQ,EAAQ,GAChBC,EAAc,EAAQ,IAM1BvB,EAAOC,QAAU,SAAUuB,GACzB,OAAOF,GAAM,WACX,QAASC,EAAYC,MANf,aAMqCA,MAAyBD,EAAYC,GAAaC,OAASD","file":"0.js","sourcesContent":["import { updateProducts } from './rendering';\r\nimport { products } from './products';\r\n\r\nconst priceEl = document.getElementById('price');\r\nconst titleEl = document.getElementById('title');\r\n\r\nexport function deleteProduct(prodId) {\r\n  const deletedProductIndex = products.findIndex(prod => prod.id === prodId);\r\n  const deletedProduct = products[deletedProductIndex];\r\n  products.splice(deletedProductIndex, 1);\r\n  updateProducts(deletedProduct, prodId, deleteProduct, false);\r\n}\r\n\r\nexport function addProduct(event) {\r\n  const title = titleEl.value;\r\n  const price = priceEl.value;\r\n\r\n  if (title.trim().length === 0 || price.trim().length === 0 || +price < 0) {\r\n    alert('Please enter some valid input values for title and price.');\r\n    return;\r\n  }\r\n\r\n  const newProduct = {\r\n    id: new Date().toString(),\r\n    title: title,\r\n    price: price\r\n  };\r\n\r\n  products.unshift(newProduct);\r\n  updateProducts(newProduct, newProduct.id, deleteProduct, true);\r\n}\r\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/forced-string-trim-method');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n"],"sourceRoot":""}